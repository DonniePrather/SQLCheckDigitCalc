/* Create tables */
CREATE TABLE TABLE_A
(UPC_NO_CD VARCHAR(11));

CREATE TABLE TABLE_B
(UPC_WITH_CHECK_DIGIT VARCHAR(12));


/* Create Function that will run the check digit calculations */
CREATE FUNCTION CALCULATE_UPCA_CHECKDIGIT
( 
@POSITION VARCHAR(11)
)
RETURNS VARCHAR(12)
BEGIN
DECLARE @CHECKDIGIT VARCHAR(12);
DECLARE @POSITION1 VARCHAR(12);
DECLARE @SUM_OF_ODDS INT;
DECLARE @SUM_OF_EVENS INT;

SET @CHECKDIGIT = '';
SET @SUM_OF_ODDS = 0;
SET @SUM_OF_EVENS = 0;
SET @SUM_OF_ODDS = CONVERT(INT,SUBSTRING(@POSITION,1,1))
+ CONVERT(INT,SUBSTRING(@POSITION,3,1))
+ CONVERT(INT,SUBSTRING(@POSITION,5,1))
+ CONVERT(INT,SUBSTRING(@POSITION,7,1))
+ CONVERT(INT,SUBSTRING(@POSITION,9,1))
+ CONVERT(INT,SUBSTRING(@POSITION,11,1));
SET @SUM_OF_EVENS = CONVERT(INT,SUBSTRING(@POSITION,2,1))
+ CONVERT(INT,SUBSTRING(@POSITION,4,1))
+ CONVERT(INT,SUBSTRING(@POSITION,6,1))
+ CONVERT(INT,SUBSTRING(@POSITION,8,1))
+ CONVERT(INT,SUBSTRING(@POSITION,10,1));

IF (((@SUM_OF_ODDS * 3) + (@SUM_OF_EVENS))%10 = 0)
SET @CHECKDIGIT = @POSITION + '0';
ELSE
SET @CHECKDIGIT = @POSITION + CONVERT(VARCHAR,(10 - (((@SUM_OF_ODDS * 3) + (@SUM_OF_EVENS)))%10));
RETURN @CHECKDIGIT ;
END

/* Create trigger to send the UPC with created check digit to table_b */
CREATE TRIGGER TO_TABLE_B
ON TABLE_A
AFTER INSERT 
AS
DECLARE @UPC VARCHAR(11);
SET @UPC = (SELECT UPC_NO_CD FROM INSERTED);
IF (LEN(@UPC)=11)
INSERT INTO TABLE_B (UPC_WITH_CHECK_DIGIT )
SELECT DBO.CALCULATE_UPCA_CHECKDIGIT(@UPC) FROM INSERTED;

/* Insert 11 digit upc with no check digit into table_a */
INSERT INTO TABLE_A (UPC_NO_CD)
VALUES (62910415002);
INSERT INTO TABLE_A (UPC_NO_CD)
VALUES (73687268910);
INSERT INTO TABLE_A (UPC_NO_CD)
VALUES (54327967545);

/* to confirm data has been entered into table_a */
SELECT * FROM TABLE_A

/* to confirm check digit has been calculated and moved to table_b */
SELECT * FROM TABLE_B
